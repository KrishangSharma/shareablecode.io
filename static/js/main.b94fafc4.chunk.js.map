{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setopen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAUe,SAASA,EAAOC,GAC3B,IACIC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAGJ,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMF,OACI,sBAAKC,UAAS,2BAAwBF,EAAO,GAAK,aAAlD,UACI,sBAAKE,UAAU,eAAf,UACKN,EACD,wBACAO,KAAO,SACPD,UAAY,sBACZE,QAAW,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,MAHtC,SAKI,cAAC,IAAD,CAAiBC,KAASN,EAAOO,IAAgBC,WAGzD,cAAC,aAAD,CACAC,eAjBN,SAAsBC,EAAQC,EAAMd,GAChCC,EAASD,IAiBPA,MAASA,EACTK,UAAY,sBACZU,QAAW,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,aAAa,EACbC,MAAO,iBCxCN,SAASC,EAAgBC,EAAKC,GAEzC,IAAMC,EAJK,iBAIkBF,EAC7B,EAA0BpB,oBAAS,WAC/B,IAAMuB,EAAYC,aAAaC,QAAQH,GAEvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACAA,IAEAA,KARf,mBAAOvB,EAAP,KAAc8B,EAAd,KAgBA,OAJAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAClD,CAACwB,EAAaxB,IAEV,CAACA,EAAO8B,GCpBJ,SAASI,IAEpB,MAAwBb,EAAgB,OAAQ,IAAhD,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAsBf,EAAgB,MAAO,IAA7C,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAAoBjB,EAAgB,KAAM,IAA1C,mBAAOkB,EAAP,KAAWC,EAAX,KACA,EAA4BtC,mBAAS,IAArC,mBAAOuC,EAAP,KAAeC,EAAf,KAeA,OAbAX,qBAAU,WACN,IAAMY,EAAUC,YAAW,WACvBF,EAAU,+CAAD,OAEGP,EAFH,2CAGIE,EAHJ,6CAIKE,EAJL,oDAOV,KACH,OAAO,kBAAMM,aAAaF,MAC3B,CAACR,EAAME,EAAKE,IAGX,qCACI,sBAAKlC,UAAY,gBAAjB,UACI,cAACT,EAAD,CACAE,SAAW,MACXC,YAAc,OACdC,MAASmC,EACTlC,SAAYmC,IAEZ,cAACxC,EAAD,CACAE,SAAW,MACXC,YAAc,MACdC,MAASqC,EACTpC,SAAYqC,IAEZ,cAAC1C,EAAD,CACAE,SAAW,aACXC,YAAc,KACdC,MAASuC,EACTtC,SAAYuC,OAGhB,qBAAKnC,UAAY,OAAjB,SACI,wBACAoC,OAAUA,EACVK,MAAQ,SACRC,QAAU,gBACVC,YAAc,IACdC,MAAQ,OACRC,OAAS,cChDzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEFoB,SAASC,eAAe,W","file":"static/js/main.b94fafc4.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Editor(props) {\r\n    const{\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    } = props\r\n\r\n    const [open, setopen] = useState(true)\r\n\r\n    function handleChange(editor, data, value){\r\n        onChange(value)\r\n    }\r\n\r\n  return (\r\n      <div className = {`editor-container ${open ? '' : 'collapsed'}`}>\r\n          <div className=\"editor-title\">\r\n              {displayName}\r\n              <button\r\n              type = \"button\"\r\n              className = \"expand-collapse-btn\"\r\n              onClick = {() => setopen(prevOpen => !prevOpen)}\r\n              >\r\n                  <FontAwesomeIcon icon = { open ? faCompressAlt : faExpandAlt} />\r\n              </button>\r\n          </div>\r\n          <ControlledEditor\r\n          onBeforeChange = {handleChange}\r\n          value = {value}\r\n          className = \"code-mirror-wrapper\"\r\n          options = {{\r\n              lineWrapping: true,\r\n              lint: true,\r\n              mode: language,\r\n              lineNumbers: true,\r\n              theme: \"material\"\r\n          }}\r\n          />\r\n      </div>\r\n  );\r\n}\r\n","import { prefix } from '@fortawesome/free-solid-svg-icons'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n\r\n    const prefixedKey = PREFIX + key\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n\r\n        if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n        if (typeof initialValue === \"function\") {\r\n            return initialValue()\r\n        } else{\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [prefixedKey, value])\r\n\r\n    return [value, setValue]\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport Editor from './Editor'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\n\r\nexport default function App() {\r\n\r\n    const [html, setHtml] = useLocalStorage('html', '')\r\n    const [css, setCss] = useLocalStorage('css', '')\r\n    const [js, setJs] = useLocalStorage('js', '')\r\n    const [srcDoc, setSrcDoc] = useState('')\r\n\r\n    useEffect(()=>{\r\n        const timeout = setTimeout(()=>{\r\n            setSrcDoc(`\r\n            <html>\r\n                <body>${html}</body>\r\n                <style>${css}</style>\r\n                <script>${js}</script>\r\n            </html>\r\n            `)\r\n        }, 500);\r\n        return () => clearTimeout(timeout)\r\n    }, [html, css, js])\r\n    \r\n    return (\r\n        <>\r\n            <div className = \"pane top-pane\">\r\n                <Editor\r\n                language = \"xml\"\r\n                displayName = \"HTML\"\r\n                value = {html}\r\n                onChange = {setHtml} />\r\n\r\n                <Editor\r\n                language = \"css\"\r\n                displayName = \"CSS\"\r\n                value = {css}\r\n                onChange = {setCss} />\r\n\r\n                <Editor\r\n                language = \"javascript\"\r\n                displayName = \"JS\"\r\n                value = {js}\r\n                onChange = {setJs} />\r\n            </div>\r\n\r\n            <div className = \"pane\">\r\n                <iframe\r\n                srcDoc = {srcDoc}\r\n                title = \"output\"\r\n                sandbox = \"allow-scripts\"\r\n                frameBorder = \"0\"\r\n                width = \"100%\"\r\n                height = \"100%\"\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// ========================================\r\n"],"sourceRoot":""}